on: [push, pull_request]

jobs:
  aarch64_job:
    # The host should always be Linux
    runs-on: ubuntu-20.04
    name: Build on ubuntu-20.04 aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
            echo "Trying the bazel binary"
            
            apt update
            apt install curl wget -y
            apt install -y openjdk-8-jdk

            wget https://github.com/koenvervloesem/bazel-on-arm/releases/download/v3.4.1/bazel-3.4.1
            chmod +x bazel
            cp bazel-3.4.1 /usr/local/bin/bazel
            rm ./bazel-3.4.1
            
            apt install -qq -y python3 python3-pip python3-setuptools
            apt install -qq -y libopencv-core-dev libopencv-highgui-dev \
                       libopencv-calib3d-dev libopencv-features2d-dev \
                       libopencv-imgproc-dev libopencv-video-dev
            sed -i "s/x86_64-linux-gnu/aarch64-linux-gnu/g" third_party/opencv_linux.BUILD
            sed -i -e "/\"imgcodecs\"/d;/\"calib3d\"/d;/\"features2d\"/d;/\"highgui\"/d;/\"video\"/d;/\"videoio\"/d" third_party/BUILD
            sed -i -e "/-ljpeg/d;/-lpng/d;/-ltiff/d;/-lImath/d;/-lIlmImf/d;/-lHalf/d;/-lIex/d;/-lIlmThread/d;/-lrt/d;/-ldc1394/d;/-lavcodec/d;/-lavformat/d;/-lavutil/d;/-lswscale/d;/-lavresample/d" third_party/BUILD
            echo 'diff --git a/third_party/BUILD b/third_party/BUILD
            index 2481c59..4d69427 100644
            --- a/third_party/BUILD
            +++ b/third_party/BUILD
            @@ -110,6 +110,8 @@ cmake_external(
                     "WITH_ITT": "OFF",
                     "WITH_JASPER": "OFF",
                     "WITH_WEBP": "OFF",
            +        "ENABLE_NEON": "OFF",
            +        "WITH_TENGINE": "OFF",
                     # When building tests, by default Bazel builds them in dynamic mode.
                     # See https://docs.bazel.build/versions/master/be/c-cpp.html#cc_binary.linkstatic
                     # For example, when building //mediapipe/calculators/video:opencv_video_encoder_calculator_test,
            ' | patch -p1

            python3 setup.py install
            python3 setup.py gen_protos && python3 setup.py bdist_wheel

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          # Artifact name
          path: /**/*.whl
