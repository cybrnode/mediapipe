on: [push, pull_request]

jobs:
  aarch64_job:
    # The host should always be Linux
    runs-on: ubuntu-20.04
    name: Build on ubuntu-20.04 aarch64
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.0.5
        name: Run commands
        id: runcmd
        with:
          arch: aarch64
          distro: ubuntu20.04

          # Not required, but speeds up builds by storing container images in
          # a GitHub package registry.
          githubToken: ${{ github.token }}

          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)
            echo "Trying the bazel binary"
            
            apt update
            apt install curl -y
            apt install -y openjdk-8-jdk
            
            curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=1Vz5cWhNtGMYL8qHFJ5jgWUYVG-QNOJVY" > /dev/null
            CODE="$(awk '/_warning_/ {print $NF}' /tmp/cookie)"
            curl -Lb /tmp/cookie "https://drive.google.com/uc?export=download&confirm=${CODE}&id=1Vz5cWhNtGMYL8qHFJ5jgWUYVG-QNOJVY" -o bazel
            chmod +x bazel
            cp ./bazel /usr/local/bin
            bazel --help
            rm ./bazel
            
            apt install -y python3 python3-pip python3-setuptools
            apt install -y libopencv-core-dev libopencv-highgui-dev \
                       libopencv-calib3d-dev libopencv-features2d-dev \
                       libopencv-imgproc-dev libopencv-video-dev
            sed -i "s/x86_64-linux-gnu/aarch64-linux-gnu/g" third_party/opencv_linux.BUILD
            python3 setup.py install 

      - name: Get the output
        # Echo the `uname` output parameter from the `runcmd` step
        run: |
          echo "The uname output was ${{ steps.runcmd.outputs.uname }}"
